[% PROCESS svc_util.t -%]
// [% pkg %]_version.h   -*-C++-*-
#ifndef INCLUDED_[% PKG %]_VERSION
#define INCLUDED_[% PKG %]_VERSION

#ifndef INCLUDED_BDES_IDENT
#include <bdes_ident.h>
#endif
BDES_IDENT_RCSID([% pkg %]_version_h,"\$Id\$ \$CSID\$ \$CCId\$")
BDES_IDENT_PRAGMA_ONCE

//@PURPOSE: Provide source control management (versioning) information.
//
//@CLASSES:
//  [% pkg %]::Version: namespace for RCS and SCCS versioning information
//
//@AUTHOR: [% svc.author %]
//
//@DESCRIPTION: This component provides source control management (versioning)
// information for the '[% SERVICE %]' service.  In particular, this component
// embeds RCS-style and SCCS-style version strings in binary executable files
// that use one or more components from the '[% pkg %]' package.  This version
// information may be extracted from binary files using common UNIX utilities
// (e.g., 'ident' and 'what').  In addition, the 'version' 'static' member
// function in the 'Version' 'struct' can be used to query version
// information for the '[% pkg %]' package group at runtime.  The following
// usage examples illustrate these two basic capabilities.
//
///Usage
///-----
// A program can display the version of [% SERVICE %] service that was used to
// build it by printing the version string returned by
// '[% pkg %]::Version::version()' to 'stdout' as follows:
//..
//  std::printf("[% SERVICE %] version: \%s\n", [% pkg %]::Version::version());
//..

namespace BloombergLP {
namespace [% namespace %] {

                               // ==============
                               // struct Version
                               // ==============

struct Version {
    static const char *d_ident;
    static const char *d_what;

    static const char *d_version;
    static const char *d_dependencies;
    static const char *d_buildInfo;
    static const char *d_timestamp;
    static const char *d_sourceControlInfo;

    static const char *version();
};

inline
const char *Version::version()
{
    return d_version;
}

static volatile const char [% namespace %]_version_assertion =
        Version::d_version != 0;

}  // close namespace [% namespace %]
}  // close namespace BloombergLP
#endif

// GENERATED BY [% version %] [% timestamp %]
// ----------------------------------------------------------------------------
// NOTICE:
//      Copyright (C) Bloomberg L.P., [% year.format %]
//      All Rights Reserved.
//      Property of Bloomberg L.P. (BLP)
//      This software is made available solely pursuant to the
//      terms of a BLP license agreement which governs its use.
// ------------------------------- END-OF-FILE --------------------------------
