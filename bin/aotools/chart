#! /bbs/opt/bin/perl -w

use strict;

unless (scalar @ARGV >= 2) {
    die "Not enough arguments.\nUsage: $0 movelist.in movelist.out\n";
}

my $listfile = shift;
my $movelistfile = shift;

my @lib_list_in = `cat $listfile`;
chomp @lib_list_in;

my @lib_list;
my %lib_level;

for my $level (0..$#lib_list_in) {
    my @libset = split /\s+/, $lib_list_in[$level];
    for my $lib (@libset) {
	$lib_level{$lib} = $level;
    }
    push @lib_list, @libset;
}

# $status{add}{$from}{$to} = 'W' or 'S';
# $status{del}{$from}{$to} = 'w' or 's';

my %status;

my %key = (
    add   =>	{ dep    => 'S', weak => 'W' },
    both  =>	{ strong => 'S', weak => 'W' },
    del   =>	{ dep    => 's', weak => 'w' },
);

open my $fd, '<', $movelistfile or die "Cannot open $movelistfile ($!)";

while( defined( my $line = <$fd> ) ) {
    next if $line =~ /^###/;
    my( $action, $strength, $from, $to ) =
	    ($line =~ /^(add|\# \(|del)(dep|strong|weak)\)?\s+(\S+)\s+(\S+)/ )
	or die "failed to match ($line)";
    $action = 'both' if $action eq '# (';
    $status{$action}{$from}{$to} = $key{$action}{$strength};
}

foreach my $from (keys %{ $status{both} } ) {
    foreach my $to (keys %{ $status{both}{$from} } ) {
	$status{add}{$from}{$to} = $status{both}{$from}{$to};
	$status{del}{$from}{$to} = '=';
    }
}

my $vcols = 1 + int((@lib_list+4)/5);
my $vsep = (' ' x 10).' '.('-' x (2*$vcols + 3*@lib_list))."\n";
$vsep =~ s/-/ /;
my $vpos = 0;
foreach my $from (@lib_list) {
    my $vlevel = $lib_level{$from};
    my $prev_hlevel = -1;
    print $vsep unless $vpos++ % 5;
    printf "%10s ", $from;
    my $hpos = 0;
    foreach my $to (@lib_list) {
	print " |" unless $hpos++ % 5;
	my $hlevel = $lib_level{$to};
	print( $prev_hlevel == $hlevel && $vlevel == $hlevel ? ':' : " " );
	$prev_hlevel = $hlevel;
	my $ch =
	    ($from eq $to)		? '\\'
	    : (exists $status{add}{$from} and exists $status{add}{$from}{$to} )
					? $status{add}{$from}{$to}
	    :				  ' ';
	print $ch;
	$ch =
	    ($from eq $to)		? '\\'
	    : (exists $status{del}{$from} and exists $status{del}{$from}{$to} )
					? $status{del}{$from}{$to}
	    :				  ' ';
	print $ch;
    }
    print " |" unless $hpos % 5 == 1;
    print "\n";
}
print $vsep unless $vpos++ % 5 == 1;

print "\n";

my $still_going = 1;
my $namepos = 0;

while ($still_going) {
    $still_going = 0;
    print (' ' x 11);
    my $hpos = 0;
    foreach my $to (@lib_list) {
	print '  ' unless $hpos++ % 5;
	my $namechar = ' ';
	if (length($to) > $namepos) {
	    $still_going ||= length($to) > ($namepos+1);
	    $namechar = substr( $to, $namepos, 1 );
	}
	print ' ', $namechar, ' ';
    }
    print "\n";
    ++$namepos;
}
